---
layout: elk
theme: light
node_spacing: 150
edge_spacing: 100
---

# Observability Platform - Simplified
# Three Pillars: Metrics, Logs, and Traces with unified visualization

# Application Layer
container "Applications" as app_services {
  style: {
    backgroundColor: "#f0f9ff";
    strokeColor: "#0ea5e9";
    strokeWidth: 2;
  }

  applications[Application Services] {
    backgroundColor: "#0ea5e9";
    strokeColor: "#0284c7";
    fontSize: 16;
  }

  infrastructure[Infrastructure] {
    backgroundColor: "#7dd3fc";
    strokeColor: "#0284c7";
    fontSize: 14;
  }
}

# Metrics Collection (Pillar 1)
container "Metrics" as metrics {
  style: {
    backgroundColor: "#fef3c7";
    strokeColor: "#f59e0b";
    strokeWidth: 2;
  }

  prometheus[Prometheus] {
    backgroundColor: "#fbbf24";
    strokeColor: "#f59e0b";
    fontSize: 16;
  }

  exporters[Metrics Exporters] {
    backgroundColor: "#fed7aa";
    strokeColor: "#f59e0b";
    fontSize: 14;
  }

  exporters -> prometheus: "Scrape";
}

# Logging Platform (Pillar 2)
container "Logging" as logging {
  style: {
    backgroundColor: "#f0fdf4";
    strokeColor: "#16a34a";
    strokeWidth: 2;
  }

  log_collectors[Log Collectors] {
    backgroundColor: "#16a34a";
    strokeColor: "#15803d";
    fontSize: 14;
  }

  elasticsearch[Elasticsearch] {
    backgroundColor: "#86efac";
    strokeColor: "#22c55e";
    fontSize: 16;
    shape: cylinder;
  }

  log_collectors -> elasticsearch: "Store";
}

# Distributed Tracing (Pillar 3)
container "Tracing" as tracing {
  style: {
    backgroundColor: "#f3e8ff";
    strokeColor: "#7c3aed";
    strokeWidth: 2;
  }

  opentelemetry[OpenTelemetry] {
    backgroundColor: "#ddd6fe";
    strokeColor: "#8b5cf6";
    fontSize: 14;
  }

  jaeger[Jaeger] {
    backgroundColor: "#7c3aed";
    strokeColor: "#6b21a8";
    fontSize: 16;
    color: "#ffffff";
  }

  opentelemetry -> jaeger: "Traces";
}

# Visualization
container "Visualization" as visualization {
  style: {
    backgroundColor: "#fef3e2";
    strokeColor: "#ea580c";
    strokeWidth: 2;
  }

  grafana[Grafana] {
    backgroundColor: "#ea580c";
    strokeColor: "#c2410c";
    fontSize: 16;
    color: "#ffffff";
  }

  kibana[Kibana] {
    backgroundColor: "#fed7aa";
    strokeColor: "#ea580c";
    fontSize: 14;
  }
}

# Alerting
container "Alerting" as alerting {
  style: {
    backgroundColor: "#fef2f2";
    strokeColor: "#dc2626";
    strokeWidth: 2;
  }

  alertmanager[AlertManager] {
    backgroundColor: "#dc2626";
    strokeColor: "#b91c1c";
    fontSize: 16;
    color: "#ffffff";
  }

  notification_channels[Notification Channels] {
    backgroundColor: "#fca5a5";
    strokeColor: "#dc2626";
    fontSize: 14;
  }

  alertmanager -> notification_channels: "Route";
}

# === CONTAINER TO CONTAINER CONNECTIONS ===

# Application to Observability
app_services -> metrics: "Metrics" {
  routing: orthogonal;
};

app_services -> logging: "Logs" {
  routing: orthogonal;
};

app_services -> tracing: "Traces" {
  routing: orthogonal;
};

# Data to Visualization
metrics -> visualization: "Metrics Data" {
  routing: orthogonal;
};

logging -> visualization: "Log Data" {
  routing: orthogonal;
};

tracing -> visualization: "Trace Data" {
  routing: orthogonal;
};

# Metrics to Alerting
metrics -> alerting: "Alert Rules" {
  routing: orthogonal;
};
