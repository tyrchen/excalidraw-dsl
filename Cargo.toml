[package]
name = "excalidraw-dsl"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
description = "A domain-specific language for generating Excalidraw diagrams"
license = "MIT"
repository = "https://github.com/yourusername/excalidraw-dsl"
keywords = ["excalidraw", "dsl", "diagrams", "visualization"]
categories = ["command-line-utilities", "visualization"]

[[bin]]
name = "edsl"
path = "src/main.rs"

[lib]
name = "excalidraw_dsl"
path = "src/lib.rs"

[dependencies]
# Core parsing
pest = "2.8"
pest_derive = "2.8"

# Graph processing
petgraph = "0.8"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# CLI
clap = { version = "4.5", features = ["derive", "env"] }

# HTTP client for LLM integration
reqwest = { version = "0.12", default-features = false, features = [
  "json",
  "rustls-tls",
], optional = true }
tokio = { version = "1.47", features = ["full"], optional = true }

# Web server dependencies
axum = { version = "0.8", features = ["ws"], optional = true }
tokio-tungstenite = { version = "0.26", optional = true }
tower = { version = "0.5", optional = true }
tower-http = { version = "0.6", features = [
  "cors",
  "fs",
  "limit",
], optional = true }
futures-util = { version = "0.3", optional = true }

# UUID generation
uuid = { version = "1.17", features = ["v4"] }

# Random number generation
rand = "0.9"

# Logging
log = "0.4"
env_logger = "0.11"

# File watching (updating to latest major version)
notify = "8.1"

# Performance and concurrency
rayon = "1.10"
dashmap = "6.1"
once_cell = "1.21"

# Machine Learning
candle-core = { version = "^0.9.0", features = ["metal"], optional = true }
candle-nn = { version = "^0.9.0", features = ["metal"], optional = true }
ndarray = { version = "0.16", optional = true }
linfa = { version = "0.7", optional = true }
linfa-trees = { version = "0.7", optional = true }
linfa-clustering = { version = "0.7", optional = true }
chrono = { version = "0.4", features = ["serde"], optional = true }

[dev-dependencies]
tokio-test = "0.4"
tempfile = "3.20"
criterion = { version = "0.7", features = ["html_reports"] }

[features]
default = ["llm", "server", "templates", "routing", "elk-layout", "ml-layout"]
llm = ["reqwest", "tokio"]
server = [
  "axum",
  "tokio-tungstenite",
  "tower",
  "tower-http",
  "futures-util",
  "tokio",
]
templates = []
routing = []
elk-layout = []
ml-layout = [
  "candle-core",
  "candle-nn",
  "ndarray",
  "linfa",
  "linfa-trees",
  "linfa-clustering",
  "chrono",
]

# Future layout engine integration
# Note: @antv/layout-rust is not available yet, so we'll implement a basic Dagre-like algorithm
# antv-layout = { version = "0.1", optional = true }

[[bench]]
name = "compilation"
harness = false

[[bench]]
name = "parsing"
harness = false

[[bench]]
name = "layout"
harness = false
